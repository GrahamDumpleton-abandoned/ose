/*
// ============================================================================
//
// = LIBRARY
//     OTC
// 
// = FILENAME
//     misc/otchash.cc
//
// = AUTHOR(S)
//     Graham Dumpleton
// 
// = COPYRIGHT
//     Copyright 1997-2002 DUMPLETON SOFTWARE CONSULTING PTY LIMITED
//
// ============================================================================
*/

#ifdef __GNUG__
#if (__GNUC__ < 3) && (__GNUC__MINOR__ < 95)
#pragma implementation "OTC/misc/hash.hh"
#endif
#endif

#include <OTC/misc/hash.hh>

#include <string.h>

#ifdef HAVE_MEMORY_H
#include <memory.h>
#endif

#if defined(HAVE_WCHAR_T)
#include <wchar.h>
#include <wctype.h>
#endif

/* ------------------------------------------------------------------------- */
static int OTCLIB_STRRANDDATASIZE = 256;
static int OTCLIB_STRRANDDATA[] =
{
  728127828, 1059808615, 189099567, 1782392777, 2015910634, 1464233364,
  2117154627, 320296558, 1031062195, 1806953707, 1269105328, 244848173,
  188610040, 1102847359, 955979572, 332343558, 1444727546, 1324212966,
  1548364501, 1115311523, 1099957056, 1169413381, 2093789469, 1563302844,
  461628862, 1107584071, 301563892, 1879173093, 815149643, 1564775192,
  1840721837, 1543277471, 477100159, 2029821404, 1178186600, 345527146,
  1346571120, 1147857580, 665823704, 230149667, 807327639, 1934929033,
  474997841, 995937680, 890292744, 1430977413, 1328281238, 187536642,
  607706732, 729162092, 1302848165, 1707663788, 1898575473, 1249153986,
  1123482984, 212720687, 209254410, 1425046876, 2091893780, 1024404053,
  842338421, 1785131969, 420197876, 1319438580, 1667469725, 1598384476,
  1664965726, 866557198, 598758408, 183305783, 1096706865, 1406086048,
  2118234816, 1571704706, 254540080, 861043912, 855198472, 1582821318,
  1048580554, 1462905204, 164499762, 203945071, 1023085344, 2063075236,
  1453099057, 2146568329, 128312275, 1662353467, 1424131557, 72722408,
  539273872, 118986330, 1857854377, 959471748, 1438424911, 1377840455,
  410372577, 955906989, 96914005, 1009130985, 1139212772, 1193620870,
  267733385, 1109963940, 617841929, 522273465, 1971007852, 1473040401,
  2105094784, 872104758, 788461957, 122110898, 1076049829, 1811547301,
  37702486, 381665239, 1810631982, 166014762, 2044018706, 1087279892,
  238737170, 435808931, 1206266222, 2096591547, 1395280679, 497207485,
  1326948354, 1805653256, 1453114475, 1423862359, 667300594, 444843599,
  469999582, 935033979, 1554807540, 1087841511, 1457307445, 1378331744,
  413398264, 1414918581, 102952855, 1201860221, 1537029479, 1179002684,
  865923874, 1574731966, 1560667923, 529072209, 1740746728, 1457202982,
  1616352101, 1979483898, 1893011913, 675134675, 1928591797, 1140808944,
  1172342161, 1108056504, 798978553, 477972988, 384435215, 1466279147,
  922816587, 854434797, 253829478, 330140479, 1942276308, 1711136923,
  1708472224, 208190924, 978571856, 1811425079, 1410051145, 368117688,
  842944115, 128491372, 1942849654, 256128391, 657563581, 1536112734,
  1713331373, 126432034, 1368112984, 1458859638, 801566709, 1149221133,
  452184934, 1973908870, 109793989, 1251163487, 304398210, 494229205,
  569958986, 1227214798, 1348664002, 823788465, 1557355277, 1143456663,
  387441740, 1118343853, 1351647587, 1366013597, 782285284, 614215085,
  1734131285, 1625229400, 742706457, 1529497291, 1881357791, 1400270038,
  918126377, 1447205516, 1526702072, 138755713, 758581506, 180785133,
  1287976846, 1210766440, 7210356, 1397770836, 314446280, 311608566,
  1892000041, 884405266, 1538823364, 1093180395, 1708193731, 948694994,
  89153410, 2095635472, 2067038847, 1440800998, 1314165421, 701840484,
  2055016083, 900813058, 179586236, 650238892, 282826701, 2060944027,
  2050508930, 1200953078, 1360665895, 1429727354, 1339708791, 2119247401,
  1610512487, 480201989, 1182530193, 1617722843, 1877972825, 1496976473,
  1929331410, 1622489218, 233898092, 1320671126
};

/* ------------------------------------------------------------------------- */
int OTC_Hash::hash(char const* s)
{
  if (s == 0 || *s == '\0')
    return 0;

  int h = 0;
  while (*s != '\0')
  {
    h ^= OTCLIB_STRRANDDATA[(*s + h) & (OTCLIB_STRRANDDATASIZE-1)];
    s++;
  }
  return h;
}

/* ------------------------------------------------------------------------- */
int OTC_Hash::hash(char const* s, u_int theLength)
{
  int l = theLength;

  if (s == 0 || l <= 0)
    return 0;

  int h = 0;
  l--;
  while (l >= 0)
  {
    h ^= OTCLIB_STRRANDDATA[(s[l] + h) & (OTCLIB_STRRANDDATASIZE-1)];
    l--;
  }
  return h;
}

/* ------------------------------------------------------------------------- */
