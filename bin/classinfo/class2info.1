.\" troff -man %
.\"
.\" DO NOT EDIT
.\"
.\" This manual page is automatically generated by class2man.
.\"
.ds sV Apr 14, 2002
.ds sC class2info
.ds sS 1
.TH "\*(sC" "\*(sS" "\*(sV" "ClassInfo Tools" "User Commands"
.PP
.SH "NAME"
class2info \- 
Generates a class info description file from an input file.
.SH "SYNOPSIS"
.nf
\f(CO
class2info [ -output dirname ] file.hh
\fP
.fi
.PP
.SH "DESCRIPTION"
The \f(COclass2info\fP program is a script for generating classinfo
description files from an input file. Normally the input file will be
a C++ class header file. For each file listed, it will generate a
classinfo file. The generated file will have the same basename as the
original, but will be suffixed by ".ci".

By default the classinfo file which is generated is put in the
current directory. This can be changed by specifying an alternate
directory using the "-output" option.

Although \f(COclass2info\fP can generally extract member variable and
function information from any class as long as it is reasonably
conventionally formatted, it cannot extract documentation properly
unless it is included in the class definition in a particular format.
.PP
.SH "NOTES"
As \f(COclass2info\fP uses regular expression matching and does not use
parsing techniques, it can get confused if you use strange formatting
conventions for your code. A few known problems are given below. This
list is by no means exchaustive.

C style comments can cause confusion and can the program to hang.
You should avoid using C style comments inside the body of a class.

Pointers to functions appearing anywhere in the class will probably
cause incorrect results. Use a typedef before the class to give the
pointer to function type a name and then use that.

Declaring a pointer to class type when it is used in a return type
will probably result in the whole line being ignored. e.g. don't
declare a function prototype with 'class Foo* bar();'.

Blank lines and C++ comments inside of inline code will cause the end
of the inline to be incorrectly detected. You should avoid using blank
lines and C++ comments in inline code.
.PP
.SH "AUTHOR(S)"
Graham Dumpleton
.PP
.SH COPYRIGHT
Copyright 1991 OTC LIMITED
.br
Copyright 1995-2002 DUMPLETON SOFTWARE CONSULTING PTY LIMITED
